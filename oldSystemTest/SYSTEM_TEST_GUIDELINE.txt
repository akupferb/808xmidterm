	At my company it is common practice to prototype key mathematical algorithms in Matlab before software engineers fully implement it in C++.

	Lydia did so with some of our kinematic calculations.  This is important because not only does it guide us on what we want to include in our C++ code, this gives us example data to work with.

	Our unit tests are fairly straightforward input/output tests of specific functions.  To make a system test requires many of these.  We used Matlab to generate the data that will work as our system test.




For the user defined input below (in the future to be input through stdin in main.cpp): 

Input = [ 2.5000     0   -0.5800]


We expect to get the resultant sequence of robot (joint) positions (which creates a path):


posArray(:,:,1) =

     0     0     0
     0     0     0
     0     0     0
     0     0     0
     0     0     0
     0     0     0
     0     0     0


posArray(:,:,2) =

         0         0         0
    0.4100    0.0000    1.0000
    1.3932    0.0000    0.4636
    1.3808    0.0000    0.2139
    0.0974   -0.0000    0.2774
    0.0974   -0.0000    0.2774
    0.0974   -0.0000   -0.0226


posArray(:,:,3) =

         0         0         0
    0.4100    0.0000    1.0000
    1.4570    0.0000    0.6022
    1.4761    0.0000    0.3529
    0.1948   -0.0000    0.2548
    0.1948   -0.0000    0.2548
    0.1948   -0.0000   -0.0452


posArray(:,:,4) =

         0         0         0
    0.4100    0.0000    1.0000
    1.4992    0.0000    0.7391
    1.5502    0.0000    0.4944
    0.2922   -0.0000    0.2322
    0.2922   -0.0000    0.2322
    0.2922   -0.0000   -0.0678


posArray(:,:,5) =

         0         0         0
    0.4100    0.0000    1.0000
    1.5220    0.0000    0.8665
    1.6039    0.0000    0.6302
    0.3897    0.0000    0.2096
    0.3897    0.0000    0.2096
    0.3897   -0.0000   -0.0904


posArray(:,:,6) =

         0         0         0
    0.4100    0.0000    1.0000
    1.5298    0.0000    0.9785
    1.6401    0.0000    0.7541
    0.4871    0.0000    0.1870
    0.4871    0.0000    0.1870
    0.4871    0.0000   -0.1130


posArray(:,:,7) =

         0         0         0
    0.4100    0.0000    1.0000
    1.5277    0.0000    1.0722
    1.6634    0.0000    0.8623
    0.5845    0.0000    0.1644
    0.5845    0.0000    0.1644
    0.5845    0.0000   -0.1356


posArray(:,:,8) =

         0         0         0
    0.4100    0.0000    1.0000
    1.5203    0.0000    1.1472
    1.6782    0.0000    0.9534
    0.6819    0.0000    0.1418
    0.6819    0.0000    0.1418
    0.6819    0.0000   -0.1582


posArray(:,:,9) =

         0         0         0
    0.4100    0.0000    1.0000
    1.5112    0.0000    1.2046
    1.6879    0.0000    1.0278
    0.7793    0.0000    0.1192
    0.7793    0.0000    0.1192
    0.7793    0.0000   -0.1808


posArray(:,:,10) =

         0         0         0
    0.4100    0.0000    1.0000
    1.5026    0.0000    1.2464
    1.6953    0.0000    1.0872
    0.8767    0.0000    0.0966
    0.8767    0.0000    0.0966
    0.8767    0.0000   -0.2034


posArray(:,:,11) =

         0         0         0
    0.4100   -0.0000    1.0000
    1.4958   -0.0000    1.2747
    1.7018   -0.0000    1.1331
    0.9741   -0.0000    0.0740
    0.9741   -0.0000    0.0740
    0.9741   -0.0000   -0.2260


posArray(:,:,12) =

         0         0         0
    0.4100   -0.0000    1.0000
    1.4914   -0.0000    1.2913
    1.7086   -0.0000    1.1674
    1.0715   -0.0000    0.0514
    1.0715   -0.0000    0.0514
    1.0715   -0.0000   -0.2486


posArray(:,:,13) =

         0         0         0
    0.4100    0.0000    1.0000
    1.4896    0.0000    1.2980
    1.7159    0.0000    1.1916
    1.1690    0.0000    0.0288
    1.1690    0.0000    0.0288
    1.1690    0.0000   -0.2712


posArray(:,:,14) =

         0         0         0
    0.4100   -0.0000    1.0000
    1.4902   -0.0000    1.2960
    1.7238   -0.0000    1.2070
    1.2664   -0.0000    0.0062
    1.2664   -0.0000    0.0062
    1.2664   -0.0000   -0.2938


posArray(:,:,15) =

         0         0         0
    0.4100   -0.0000    1.0000
    1.4928   -0.0000    1.2863
    1.7323   -0.0000    1.2146
    1.3638   -0.0000   -0.0164
    1.3638   -0.0000   -0.0164
    1.3638   -0.0000   -0.3164


posArray(:,:,16) =

         0         0         0
    0.4100    0.0000    1.0000
    1.4971    0.0000    1.2696
    1.7411    0.0000    1.2152
    1.4612    0.0000   -0.0390
    1.4612    0.0000   -0.0390
    1.4612    0.0000   -0.3390


posArray(:,:,17) =

         0         0         0
    0.4100    0.0000    1.0000
    1.5026    0.0000    1.2463
    1.7498    0.0000    1.2091
    1.5586    0.0000   -0.0616
    1.5586    0.0000   -0.0616
    1.5586    0.0000   -0.3616


posArray(:,:,18) =

         0         0         0
    0.4100    0.0000    1.0000
    1.5089    0.0000    1.2166
    1.7581    0.0000    1.1967
    1.6560    0.0000   -0.0842
    1.6560    0.0000   -0.0842
    1.6560    0.0000   -0.3842


posArray(:,:,19) =

         0         0         0
    0.4100   -0.0000    1.0000
    1.5154   -0.0000    1.1805
    1.7654   -0.0000    1.1781
    1.7534   -0.0000   -0.1068
    1.7534   -0.0000   -0.1068
    1.7534   -0.0000   -0.4068


posArray(:,:,20) =

         0         0         0
    0.4100   -0.0000    1.0000
    1.5215   -0.0000    1.1376
    1.7710   -0.0000    1.1531
    1.8508   -0.0000   -0.1294
    1.8508   -0.0000   -0.1294
    1.8508   -0.0000   -0.4294


posArray(:,:,21) =

         0         0         0
    0.4100   -0.0000    1.0000
    1.5266   -0.0000    1.0873
    1.7743   -0.0000    1.1212
    1.9483   -0.0000   -0.1520
    1.9483   -0.0000   -0.1520
    1.9483   -0.0000   -0.4520


posArray(:,:,22) =

         0         0         0
    0.4100    0.0000    1.0000
    1.5296    0.0000    1.0285
    1.7740    0.0000    1.0814
    2.0457    0.0000   -0.1746
    2.0457    0.0000   -0.1746
    2.0457    0.0000   -0.4746


posArray(:,:,23) =

         0         0         0
    0.4100   -0.0000    1.0000
    1.5293   -0.0000    0.9591
    1.7684   -0.0000    1.0320
    2.1431   -0.0000   -0.1972
    2.1431   -0.0000   -0.1972
    2.1431   -0.0000   -0.4972


posArray(:,:,24) =

         0         0         0
    0.4100    0.0000    1.0000
    1.5230    0.0000    0.8752
    1.7544    0.0000    0.9697
    2.2405    0.0000   -0.2198
    2.2405    0.0000   -0.2198
    2.2405    0.0000   -0.5198


posArray(:,:,25) =

         0         0         0
    0.4100    0.0000    1.0000
    1.5057    0.0000    0.7682
    1.7255    0.0000    0.8873
    2.3379    0.0000   -0.2424
    2.3379    0.0000   -0.2424
    2.3379    0.0000   -0.5424


posArray(:,:,26) =

         0         0         0
    0.4100    0.0000    1.0000
    1.4587    0.0000    0.6067
    1.6577    0.0000    0.7580
    2.4353    0.0000   -0.2650
    2.4353    0.0000   -0.2650
    2.4353    0.0000   -0.5650





	Because this is a system test and not a simple unit test, and as it relies on user input to an executable, this cannot easily be done in google test.  Instead, we are predefining expected inputs and outputs here, so a test engineer can operate the finished executable later on to match this data.  At my company some projects have multiple sets of tests - both automated tests, and user-driven tests that include user input in the program that cannot be easily automated.  This falls into the latter category.
	   -Ryan 
